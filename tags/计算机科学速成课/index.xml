<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>计算机科学速成课 on 爱涂鸦啊</title>
    <link>https://aituyaa.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E9%80%9F%E6%88%90%E8%AF%BE/</link>
    <description>Recent content in 计算机科学速成课 on 爱涂鸦啊</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 26 May 2023 00:00:00 +0800</lastBuildDate><atom:link href="https://aituyaa.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E9%80%9F%E6%88%90%E8%AF%BE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01 计算机早期历史</title>
      <link>https://aituyaa.com/cscc/01-%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%97%A9%E6%9C%9F%E5%8E%86%E5%8F%B2/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>https://aituyaa.com/cscc/01-%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%97%A9%E6%9C%9F%E5%8E%86%E5%8F%B2/</guid>
      <description>&lt;p&gt;i.e. Early Computing&lt;/p&gt;
&lt;p&gt;Hello world！我是 Carrie Anne，欢迎收看计算机科学速成课（Crash Course Computer Science）！&lt;/p&gt;
&lt;p&gt;![[assets/Pasted image 20230526114242.png|350]]&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; Carrie Anne 小姐姐&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>02 电子计算机</title>
      <link>https://aituyaa.com/cscc/02-%E7%94%B5%E5%AD%90%E8%AE%A1%E7%AE%97%E6%9C%BA/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>https://aituyaa.com/cscc/02-%E7%94%B5%E5%AD%90%E8%AE%A1%E7%AE%97%E6%9C%BA/</guid>
      <description>&lt;p&gt;i.e. Electronic Computing&lt;/p&gt;
&lt;p&gt;上集讲到 20 世纪初，当时的早期计算设备都针对特定用途，比如制表机（tabulating machines），大大推进了政府和企业。它们帮助，甚至代替了人工。然而人类社会的规模在以前所未有的速度增长，20 世纪上半叶，世界人口几乎翻倍。一战动员 7 千万人，二战 1 亿多人。全球贸易和运输更加紧密，工程和科学的复杂度也达到新高。我们甚至开始考虑造访其他行星，复杂度的增高导致数据量暴增，人们需要更多自动化，更强的计算能力。&lt;/p&gt;
&lt;p&gt;![[assets/Pasted image 20230526114513.png|400]]&lt;/p&gt;
&lt;p&gt;很快，柜子大小的计算机变成房间大小，维护费用高，而且容易出错，而正是这些机器为未来的创新打下基础。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>03 布尔逻辑和逻辑门</title>
      <link>https://aituyaa.com/cscc/03-%E5%B8%83%E5%B0%94%E9%80%BB%E8%BE%91%E5%92%8C%E9%80%BB%E8%BE%91%E9%97%A8/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>https://aituyaa.com/cscc/03-%E5%B8%83%E5%B0%94%E9%80%BB%E8%BE%91%E5%92%8C%E9%80%BB%E8%BE%91%E9%97%A8/</guid>
      <description>&lt;p&gt;i.e. Boolean Logic and Logic Gates&lt;/p&gt;
&lt;p&gt;今天我们开始&amp;quot;抽象&amp;quot;（abstraction）的旅程！不用管底层细节，把精力用来构建更复杂的系统。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>04 二进制</title>
      <link>https://aituyaa.com/cscc/04-%E4%BA%8C%E8%BF%9B%E5%88%B6/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>https://aituyaa.com/cscc/04-%E4%BA%8C%E8%BF%9B%E5%88%B6/</guid>
      <description>&lt;p&gt;i.e. Representing Numbers and Letters with Binary&lt;/p&gt;
&lt;p&gt;今天，我们讲计算机如何存储和表示数字，所以会有一些数学，不过别担心，你们的数学水平绝对够用了。&lt;/p&gt;
&lt;p&gt;上集我们讲了，怎么用晶体管（transistors）做逻辑门（logic gates），逻辑门可以判断布尔语句，布尔代数只有两个值：&lt;code&gt;True&lt;/code&gt; 和 &lt;code&gt;False&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;但如果只有两个值，我们怎么表达更多东西 ❓ 这就需要数学了！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>05 算数逻辑单元</title>
      <link>https://aituyaa.com/cscc/05-%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E5%8D%95%E5%85%83/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>https://aituyaa.com/cscc/05-%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E5%8D%95%E5%85%83/</guid>
      <description>&lt;p&gt;i.e. How Computers Calculate-the ALU&lt;/p&gt;
&lt;p&gt;上集，我们谈了如何用二进制表示数字，比如二进制 &lt;code&gt;00101010&lt;/code&gt; 是十进制的 42，表示和存储数字是计算机的重要功能。但&lt;strong&gt;真正的目标是计算（computation）&lt;/strong&gt;，有意义的处理数字，比如把两个数字相加，这些操作由计算机的 “算术逻辑单元 （Arithmetic and Logic Unit）“处理，但大家会简称：ALU。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ALU 是计算机的数学大脑，等你理解了 ALU 的设计和功能之后，你就理解了现代计算机的基石。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>06 寄存器和内存</title>
      <link>https://aituyaa.com/cscc/06-%E5%AF%84%E5%AD%98%E5%99%A8%E5%92%8C%E5%86%85%E5%AD%98/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>https://aituyaa.com/cscc/06-%E5%AF%84%E5%AD%98%E5%99%A8%E5%92%8C%E5%86%85%E5%AD%98/</guid>
      <description>&lt;p&gt;i.e. Registers and RAM&lt;/p&gt;
&lt;p&gt;上集，我们用逻辑门做了个简单 ALU，它能执行算术 (Arithmetic) 和逻辑 (Logic) 运算 ，ALU 里的 A 和 L 因此得名。当然，算出来之后如果扔掉就没什么意义了，得找个方法存起来，可能还要进行多个连续操作，这就用到计算机内存了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>07 中央处理器</title>
      <link>https://aituyaa.com/cscc/07-%E4%B8%AD%E5%A4%AE%E5%A4%84%E7%90%86%E5%99%A8/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>https://aituyaa.com/cscc/07-%E4%B8%AD%E5%A4%AE%E5%A4%84%E7%90%86%E5%99%A8/</guid>
      <description>&lt;p&gt;i.e. The Central Processing Unit(CPU)&lt;/p&gt;
&lt;p&gt;今天我们讲 处理器（processors），提示下 - 这集可能是最难的一集，所以一旦你理解了，就会变得超厉害 der~ 😈&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>08 指令和程序</title>
      <link>https://aituyaa.com/cscc/08-%E6%8C%87%E4%BB%A4%E5%92%8C%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>https://aituyaa.com/cscc/08-%E6%8C%87%E4%BB%A4%E5%92%8C%E7%A8%8B%E5%BA%8F/</guid>
      <description>&lt;p&gt;i.e. Instructions &amp;amp; Programs&lt;/p&gt;
&lt;p&gt;上集我们把 ALU, 控制单元，RAM, 时钟 结合在一起，做了个基本，但可用的&amp;quot;中央处理单元&amp;quot;, 简称 CPU ，它是计算机的核心。&lt;/p&gt;
&lt;p&gt;我们已经用电路做了很多组件，这次我们给 CPU 一些指令来运行！ CPU 之所以强大，是因为它是可编程的（programmable）- 如果写入不同指令，就会执行不同任务。CPU 是一块硬件，可以被软件控制！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>09 高级 CPU 设计</title>
      <link>https://aituyaa.com/cscc/09-%E9%AB%98%E7%BA%A7-cpu-%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>https://aituyaa.com/cscc/09-%E9%AB%98%E7%BA%A7-cpu-%E8%AE%BE%E8%AE%A1/</guid>
      <description>&lt;p&gt;i.e. Advanced CPU Designs&lt;/p&gt;
&lt;p&gt;随着本系列进展，我们知道计算机进步巨大，从 1 秒 1 次运算，到现在有千赫甚至兆赫的 CPU ，你现在看视频的设备八成也有 GHz 速度 ，1 秒十亿条指令 ，这是很大的计算量！&lt;/p&gt;
&lt;p&gt;早期计算机的提速方式是减少晶体管的切换时间 ，晶体管组成了逻辑门，ALU 以及前几集的其他组件，但这种提速方法最终会碰到瓶颈，所以处理器厂商发明各种新技术来提升性能，不但让简单指令运行更快，也让它能进行更复杂的运算。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>10 早期的编程方式</title>
      <link>https://aituyaa.com/cscc/10-%E6%97%A9%E6%9C%9F%E7%9A%84%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>https://aituyaa.com/cscc/10-%E6%97%A9%E6%9C%9F%E7%9A%84%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F/</guid>
      <description>&lt;p&gt;i.e. Early Programming&lt;/p&gt;
&lt;p&gt;前几集我们把重点放在计算机的原理，怎么从内存读写数据，执行操作，比如把两个数字加在一起，还简单讲了下指令的执行，也就是计算机程序。&lt;/p&gt;
&lt;p&gt;但我们还没讲的是：程序如何&amp;quot;进入&amp;quot;计算机。你应该记得在第 7, 8 集，我们一步步讲了例子程序，当时为了简单，我们假设程序已经魔法般在内存里了，但事实是，程序需要加载进内存，这不是魔法，是计算机科学！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>11 编程语言发展史</title>
      <link>https://aituyaa.com/cscc/11-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%8F%91%E5%B1%95%E5%8F%B2/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>https://aituyaa.com/cscc/11-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%8F%91%E5%B1%95%E5%8F%B2/</guid>
      <description>&lt;p&gt;i.e. The First Programming Languages&lt;/p&gt;
&lt;p&gt;之前我们把重点放在硬件 - 组成计算机的物理组件，比如电，电路，寄存器，RAM，ALU，CPU ，但在硬件层面编程非常麻烦。&lt;/p&gt;
&lt;p&gt;所以程序员想要一种更通用的方法编程 - 一种&amp;quot;更软的&amp;quot;媒介。&lt;/p&gt;
&lt;p&gt;没错，我们要讲软件！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>12 编程原理 - 语句和函数</title>
      <link>https://aituyaa.com/cscc/12-%E7%BC%96%E7%A8%8B%E5%8E%9F%E7%90%86-%E8%AF%AD%E5%8F%A5%E5%92%8C%E5%87%BD%E6%95%B0/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>https://aituyaa.com/cscc/12-%E7%BC%96%E7%A8%8B%E5%8E%9F%E7%90%86-%E8%AF%AD%E5%8F%A5%E5%92%8C%E5%87%BD%E6%95%B0/</guid>
      <description>&lt;p&gt;i.e. Programming Basics - Statements &amp;amp; Functions&lt;/p&gt;
&lt;p&gt;上集讲到用机器码写程序，还要处理那么多底层细节，对写大型程序是个巨大障碍。为了脱离底层细节，开发了编程语言，让程序员专心解决问题，不用管硬件细节。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;:: 底层各类太多了，编写麻烦，调试麻烦，改动麻烦……&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>13 算法入门</title>
      <link>https://aituyaa.com/cscc/13-%E7%AE%97%E6%B3%95%E5%85%A5%E9%97%A8/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>https://aituyaa.com/cscc/13-%E7%AE%97%E6%B3%95%E5%85%A5%E9%97%A8/</guid>
      <description>&lt;p&gt;i.e. Intro to Algorithms&lt;/p&gt;
&lt;p&gt;前两集，我们&amp;quot;初尝&amp;quot;了高级编程语言（比如 Python 和 Java），我们讨论了几种语句 - 赋值语句，if 语句，循环语句，以及把代码打包成 “函数”，比如算指数。重要的是，之前写的指数函数只是无数解决方案的一种，还有其它方案 - 用不同顺序写不同语句，也能得到一样结果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不同的是&amp;quot;算法&amp;quot;，意思是：解决问题的具体步骤，即使结果一致，有些算法会更好。&lt;/strong&gt; 一般来说，所需步骤越少越好，不过有时我们也会关心其他因素，比如占多少内存。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>14 数据结构</title>
      <link>https://aituyaa.com/cscc/14-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>https://aituyaa.com/cscc/14-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>&lt;p&gt;i.e. Data Structures&lt;/p&gt;
&lt;p&gt;上集讲了一些经典算法，比如给数组排序，找图的最短路径，而上集没讲的是 算法处理的数据 存在内存里的格式是什么。&lt;/p&gt;
&lt;p&gt;你肯定不想数据像 John Green 的大学宿舍一样乱 ，到处都是食物，衣服和纸，我们希望数据是结构化的，方便读取，因此计算机科学家发明了 “数据结构”！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>15 CSCC 其他1</title>
      <link>https://aituyaa.com/cscc/15-cscc-%E5%85%B6%E4%BB%961/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>https://aituyaa.com/cscc/15-cscc-%E5%85%B6%E4%BB%961/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;后续章节为概念性章节，统一汇总在该章节内。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>16 CSCC 其他2</title>
      <link>https://aituyaa.com/cscc/16-cscc-%E5%85%B6%E4%BB%962/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>https://aituyaa.com/cscc/16-cscc-%E5%85%B6%E4%BB%962/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;好吧，内容不少，为了后续插入图片之后，页面太大，我们这里拆分到两个页面中。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>00 计算机科学速成课</title>
      <link>https://aituyaa.com/cscc/00-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E9%80%9F%E6%88%90%E8%AF%BE/</link>
      <pubDate>Sat, 26 Mar 2022 00:00:00 +0800</pubDate>
      
      <guid>https://aituyaa.com/cscc/00-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E9%80%9F%E6%88%90%E8%AF%BE/</guid>
      <description>&lt;p&gt;i.e. cs &lt;code&gt;(computer science)&lt;/code&gt; crash course&lt;/p&gt;
&lt;p&gt;![[assets/Pasted image 20230526113630.png]]&lt;/p&gt;
&lt;p&gt;这个系列来自于 &lt;a href=&#34;https://thecrashcourse.com/&#34;&gt;CRASH COURSE&lt;/a&gt; 的一个视频系列课程（共有 40 课程，每个课程 10 分钟左右），多谢热心的 CRASH COURSE 字幕组配上了优质的字幕 - &lt;a href=&#34;https://www.bilibili.com/video/BV1EW411u7th?p=1&amp;amp;vd_source=a6f6452712ce1cd91d115827d0148715&#34;&gt;B 站地址 📺&lt;/a&gt; 。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
